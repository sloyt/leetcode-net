using JetBrains.Annotations;
using leetcode_net.Problem.p3356;
using Xunit;

namespace leetcode_net.Tests.Problem.p3356;

[TestSubject(typeof(Solution))]
public class SolutionTest
{

    [Fact]
    public void MinZeroArray()
    {
        var solution = new Solution();
        
        Assert.Equal(2, solution.MinZeroArray([2,0,2], [[0,2,1],[0,2,1],[1,1,3]]));
        Assert.Equal(-1, solution.MinZeroArray([4,3,2,1], [[1,3,2],[0,2,1]]));
        Assert.Equal(0, solution.MinZeroArray([0], [[0,0,2],[0,0,4],[0,0,4],[0,0,3],[0,0,5]]));
        Assert.Equal(5, solution.MinZeroArray([6,7], [[1,1,2],[1,1,5],[1,1,1],[0,1,4],[0,1,3],[0,1,2],[1,1,1],[1,1,2],[0,1,1],[0,1,3],[1,1,5],[1,1,5],[0,1,3],[1,1,5],[1,1,5]]));
        Assert.Equal(4, solution.MinZeroArray([5,8], [[0,1,4],[1,1,5],[1,1,4],[0,1,2],[1,1,2],[0,1,5],[1,1,2],[1,1,1],[1,1,1],[1,1,5],[1,1,1],[0,0,1],[0,1,5],[1,1,4],[0,1,4]]));
        
        Assert.Equal(-1, solution.MinZeroArray([2,0,2], [[0,0,0]]));
        Assert.Equal(-1, solution.MinZeroArray([4,3,2,1], [[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2],[1,3,2]]));
    }
}
